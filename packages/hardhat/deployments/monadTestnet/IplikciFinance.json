{
  "address": "0x4E472Ed61dc0434614Ab8779064C68138C7459A4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wbtc",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_usdc",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum IplikciFinance.Asset",
          "name": "borrowAsset",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "enum IplikciFinance.Asset",
          "name": "collateralAsset",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "borrowed",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        }
      ],
      "name": "AssetBorrowed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum IplikciFinance.Asset",
          "name": "asset",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditScore",
          "type": "uint256"
        }
      ],
      "name": "AssetSupplied",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "enum IplikciFinance.Asset",
          "name": "asset",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "earned",
          "type": "uint256"
        }
      ],
      "name": "AssetWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "creditScore",
          "type": "uint256"
        }
      ],
      "name": "LoanRepaid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "assetPrices",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "borrowAsset",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        },
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "collateralAsset",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        }
      ],
      "name": "borrow",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowCollateralBps",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrowFeeBps",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowPositions",
      "outputs": [
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "borrowAsset",
          "type": "uint8"
        },
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "collateralAsset",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "collateralAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowedAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "asset",
          "type": "uint8"
        }
      ],
      "name": "calculateEarned",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "fromAsset",
          "type": "uint8"
        },
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "toAsset",
          "type": "uint8"
        }
      ],
      "name": "convertAssetValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "creditScores",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "asset",
          "type": "uint8"
        }
      ],
      "name": "getAssetDecimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "asset",
          "type": "uint8"
        }
      ],
      "name": "getAvailableLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getBorrowPosition",
      "outputs": [
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "borrowAsset",
          "type": "uint8"
        },
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "collateralAsset",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowed",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "asset",
          "type": "uint8"
        }
      ],
      "name": "getSupplyPosition",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "earned",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "repay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "asset",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "priceInUSD",
          "type": "uint256"
        }
      ],
      "name": "setAssetPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newRate",
          "type": "uint256"
        }
      ],
      "name": "setBorrowCollateralBps",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newRate",
          "type": "uint256"
        }
      ],
      "name": "setBorrowFeeBps",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newRate",
          "type": "uint256"
        }
      ],
      "name": "setSupplyEarnBps",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "asset",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "supply",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supplyEarnBps",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "supplyPositions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "totalBorrowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "",
          "type": "uint8"
        }
      ],
      "name": "totalSupplied",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdcToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wbtcToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "enum IplikciFinance.Asset",
          "name": "asset",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x71bb05d8a4a9ee9642a79bd4a9646b7686e40d8822760f957171075b04fbfc30",
  "receipt": {
    "to": null,
    "from": "0x48f7c1D5178276eEe4397eeBc29AdE1f717e28cb",
    "contractAddress": "0x4E472Ed61dc0434614Ab8779064C68138C7459A4",
    "transactionIndex": 23,
    "gasUsed": "2139699",
    "logsBloom": "0x
    "blockHash": "0x2eb67bd4fb06aeef9cb5208716e6ff37ef39939a44e80ef86aaf60f140e6f687",
    "transactionHash": "0x71bb05d8a4a9ee9642a79bd4a9646b7686e40d8822760f957171075b04fbfc30",
    "logs": [
      {
        "transactionIndex": 23,
        "blockNumber": 41176832,
        "transactionHash": "0x71bb05d8a4a9ee9642a79bd4a9646b7686e40d8822760f957171075b04fbfc30",
        "address": "0x4E472Ed61dc0434614Ab8779064C68138C7459A4",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000048f7c1d5178276eee4397eebc29ade1f717e28cb"
        ],
        "data": "0x",
        "logIndex": 108,
        "blockHash": "0x2eb67bd4fb06aeef9cb5208716e6ff37ef39939a44e80ef86aaf60f140e6f687"
      }
    ],
    "blockNumber": 41176832,
    "cumulativeGasUsed": "28439771",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x541bcF0fc9c675aCA4eEEa0b093ab31718d96161",
    "0x4961eaFEBE8e27bA62b0dbaD9FB570B6346E74e9"
  ],
  "numDeployments": 1,
  "solcInputHash": "bbed08a9d2fef731a82c69fdc7bf858f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wbtc\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_usdc\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"borrowAsset\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"collateralAsset\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowed\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"AssetBorrowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"asset\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditScore\",\"type\":\"uint256\"}],\"name\":\"AssetSupplied\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"asset\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"earned\",\"type\":\"uint256\"}],\"name\":\"AssetWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"creditScore\",\"type\":\"uint256\"}],\"name\":\"LoanRepaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"assetPrices\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"borrowAsset\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"collateralAsset\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowCollateralBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrowFeeBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowPositions\",\"outputs\":[{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"borrowAsset\",\"type\":\"uint8\"},{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"collateralAsset\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"collateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"asset\",\"type\":\"uint8\"}],\"name\":\"calculateEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"fromAsset\",\"type\":\"uint8\"},{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"toAsset\",\"type\":\"uint8\"}],\"name\":\"convertAssetValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"creditScores\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"asset\",\"type\":\"uint8\"}],\"name\":\"getAssetDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"asset\",\"type\":\"uint8\"}],\"name\":\"getAvailableLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getBorrowPosition\",\"outputs\":[{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"borrowAsset\",\"type\":\"uint8\"},{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"collateralAsset\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"asset\",\"type\":\"uint8\"}],\"name\":\"getSupplyPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"earned\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"asset\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"priceInUSD\",\"type\":\"uint256\"}],\"name\":\"setAssetPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setBorrowCollateralBps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setBorrowFeeBps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newRate\",\"type\":\"uint256\"}],\"name\":\"setSupplyEarnBps\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"asset\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyEarnBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"supplyPositions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"totalBorrowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"totalSupplied\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wbtcToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum IplikciFinance.Asset\",\"name\":\"asset\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IplikciFinance.sol\":\"IplikciFinance\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/IplikciFinance.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity >=0.8.0 <0.9.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ncontract IplikciFinance is Ownable {\\n    // Asset types\\n    enum Asset { MON, WBTC, USDC }\\n\\n    // Token contracts\\n    IERC20 public wbtcToken;\\n    IERC20 public usdcToken;\\n\\n    // Rate parameters (in basis points, 10000 = 100%)\\n    uint256 public supplyEarnBps = 800; // 8% APY for suppliers\\n    uint256 public borrowCollateralBps = 12000; // 120% collateral required\\n    uint256 public borrowFeeBps = 1000; // 10% fee on borrowed amount\\n\\n    // Fixed prices in USD (with 18 decimals for precision)\\n    // MON = $1, WBTC = $60,000, USDC = $1\\n    mapping(Asset => uint256) public assetPrices;\\n\\n    // User positions per asset\\n    struct SupplyPosition {\\n        uint256 amount;\\n        uint256 timestamp;\\n    }\\n\\n    struct BorrowPosition {\\n        Asset borrowAsset;\\n        Asset collateralAsset;\\n        uint256 collateralAmount;\\n        uint256 borrowedAmount;\\n        uint256 timestamp;\\n    }\\n\\n    // User => Asset => SupplyPosition\\n    mapping(address => mapping(Asset => SupplyPosition)) public supplyPositions;\\n    mapping(address => BorrowPosition) public borrowPositions;\\n    mapping(address => uint256) public creditScores;\\n\\n    // Total supplied per asset\\n    mapping(Asset => uint256) public totalSupplied;\\n    mapping(Asset => uint256) public totalBorrowed;\\n\\n    // Events\\n    event AssetSupplied(address indexed user, Asset asset, uint256 amount, uint256 creditScore);\\n    event AssetWithdrawn(address indexed user, Asset asset, uint256 amount, uint256 earned);\\n    event AssetBorrowed(address indexed user, Asset borrowAsset, Asset collateralAsset, uint256 collateral, uint256 borrowed, uint256 fee);\\n    event LoanRepaid(address indexed user, uint256 amount, uint256 creditScore);\\n\\n    constructor(address _wbtc, address _usdc) Ownable(msg.sender) {\\n        wbtcToken = IERC20(_wbtc);\\n        usdcToken = IERC20(_usdc);\\n        \\n        // Set fixed prices (in USD with 18 decimals)\\n        assetPrices[Asset.MON] = 1 ether; // $1\\n        assetPrices[Asset.WBTC] = 60000 ether; // $60,000\\n        assetPrices[Asset.USDC] = 1 ether; // $1\\n    }\\n\\n    // HELPER FUNCTIONS\\n\\n    function getToken(Asset asset) internal view returns (IERC20) {\\n        if (asset == Asset.WBTC) return wbtcToken;\\n        if (asset == Asset.USDC) return usdcToken;\\n        revert(\\\"Invalid asset\\\");\\n    }\\n\\n    function getAssetDecimals(Asset asset) public pure returns (uint8) {\\n        if (asset == Asset.MON) return 18;\\n        if (asset == Asset.WBTC) return 8;\\n        if (asset == Asset.USDC) return 6;\\n        return 18;\\n    }\\n\\n    function convertAssetValue(uint256 amount, Asset fromAsset, Asset toAsset) public view returns (uint256) {\\n        // Convert amount from one asset to another based on prices\\n        uint256 fromPrice = assetPrices[fromAsset];\\n        uint256 toPrice = assetPrices[toAsset];\\n        uint256 fromDecimals = getAssetDecimals(fromAsset);\\n        uint256 toDecimals = getAssetDecimals(toAsset);\\n        \\n        // value in USD = amount * price / (10^decimals)\\n        // Convert to same decimals (18) for calculation\\n        uint256 valueInUSD = (amount * fromPrice * 1e18) / (10**fromDecimals * 1 ether);\\n        \\n        // Convert USD value to target asset\\n        uint256 targetAmount = (valueInUSD * 10**toDecimals * 1 ether) / (toPrice * 1e18);\\n        return targetAmount;\\n    }\\n\\n    // SUPPLY FUNCTIONS\\n\\n    function supply(Asset asset, uint256 amount) public payable {\\n        if (asset == Asset.MON) {\\n            require(msg.value == amount && amount > 0, \\\"Invalid MON amount\\\");\\n        } else {\\n            require(amount > 0, \\\"Amount must be greater than 0\\\");\\n            IERC20 token = getToken(asset);\\n            require(token.transferFrom(msg.sender, address(this), amount), \\\"Transfer failed\\\");\\n        }\\n\\n        SupplyPosition storage position = supplyPositions[msg.sender][asset];\\n\\n        // If user already has a position, add earned interest before updating\\n        if (position.amount > 0) {\\n            uint256 earned = calculateEarned(msg.sender, asset);\\n            position.amount += earned;\\n        }\\n\\n        position.amount += amount;\\n        position.timestamp = block.timestamp;\\n        totalSupplied[asset] += amount;\\n\\n        // Increase credit score\\n        creditScores[msg.sender] += 1;\\n\\n        emit AssetSupplied(msg.sender, asset, amount, creditScores[msg.sender]);\\n    }\\n\\n    function withdraw(Asset asset, uint256 amount) public {\\n        SupplyPosition storage position = supplyPositions[msg.sender][asset];\\n        require(position.amount > 0, \\\"No supply position\\\");\\n\\n        uint256 earned = calculateEarned(msg.sender, asset);\\n        uint256 totalAvailable = position.amount + earned;\\n\\n        require(amount <= totalAvailable, \\\"Insufficient balance\\\");\\n\\n        // Update position\\n        if (amount == totalAvailable) {\\n            delete supplyPositions[msg.sender][asset];\\n        } else {\\n            position.amount = totalAvailable - amount;\\n            position.timestamp = block.timestamp;\\n        }\\n\\n        uint256 principalWithdrawn = amount > position.amount ? position.amount : amount;\\n        totalSupplied[asset] -= principalWithdrawn;\\n\\n        // Transfer assets\\n        if (asset == Asset.MON) {\\n            require(address(this).balance >= amount, \\\"Insufficient contract balance\\\");\\n            payable(msg.sender).transfer(amount);\\n        } else {\\n            IERC20 token = getToken(asset);\\n            require(token.balanceOf(address(this)) >= amount, \\\"Insufficient contract balance\\\");\\n            require(token.transfer(msg.sender, amount), \\\"Transfer failed\\\");\\n        }\\n\\n        emit AssetWithdrawn(msg.sender, asset, amount, earned);\\n    }\\n\\n    function calculateEarned(address user, Asset asset) public view returns (uint256) {\\n        SupplyPosition memory position = supplyPositions[user][asset];\\n        if (position.amount == 0) return 0;\\n\\n        uint256 timeElapsed = block.timestamp - position.timestamp;\\n        // Simple interest calculation: (amount * rate * time) / (365 days * 10000)\\n        uint256 earned = (position.amount * supplyEarnBps * timeElapsed) / (365 days * 10000);\\n        return earned;\\n    }\\n\\n    // BORROW FUNCTIONS\\n\\n    function borrow(Asset borrowAsset, uint256 borrowAmount, Asset collateralAsset, uint256 collateralAmount) public payable {\\n        require(borrowAmount > 0, \\\"Borrow amount must be greater than 0\\\");\\n        require(borrowPositions[msg.sender].borrowedAmount == 0, \\\"Already have active loan\\\");\\n        require(borrowAsset != collateralAsset, \\\"Borrow and collateral must be different assets\\\");\\n\\n        // Convert borrow amount to collateral asset value and check 120% collateral\\n        uint256 requiredCollateral = convertAssetValue(borrowAmount, borrowAsset, collateralAsset);\\n        requiredCollateral = (requiredCollateral * borrowCollateralBps) / 10000;\\n        require(collateralAmount >= requiredCollateral, \\\"Insufficient collateral\\\");\\n\\n        // Handle collateral deposit\\n        if (collateralAsset == Asset.MON) {\\n            require(msg.value == collateralAmount, \\\"Invalid MON collateral\\\");\\n        } else {\\n            IERC20 token = getToken(collateralAsset);\\n            require(token.transferFrom(msg.sender, address(this), collateralAmount), \\\"Collateral transfer failed\\\");\\n        }\\n\\n        // Calculate fee\\n        uint256 fee = (borrowAmount * borrowFeeBps) / 10000;\\n        uint256 amountToTransfer = borrowAmount - fee;\\n\\n        // Check liquidity\\n        if (borrowAsset == Asset.MON) {\\n            require(address(this).balance >= borrowAmount, \\\"Insufficient liquidity\\\");\\n        } else {\\n            IERC20 token = getToken(borrowAsset);\\n            require(token.balanceOf(address(this)) >= borrowAmount, \\\"Insufficient liquidity\\\");\\n        }\\n\\n        // Save borrow position\\n        borrowPositions[msg.sender] = BorrowPosition({\\n            borrowAsset: borrowAsset,\\n            collateralAsset: collateralAsset,\\n            collateralAmount: collateralAmount,\\n            borrowedAmount: borrowAmount,\\n            timestamp: block.timestamp\\n        });\\n\\n        totalBorrowed[borrowAsset] += borrowAmount;\\n\\n        // Transfer borrowed amount minus fee\\n        if (borrowAsset == Asset.MON) {\\n            payable(msg.sender).transfer(amountToTransfer);\\n        } else {\\n            IERC20 token = getToken(borrowAsset);\\n            require(token.transfer(msg.sender, amountToTransfer), \\\"Borrow transfer failed\\\");\\n        }\\n\\n        emit AssetBorrowed(msg.sender, borrowAsset, collateralAsset, collateralAmount, borrowAmount, fee);\\n    }\\n\\n    function repay() public payable {\\n        BorrowPosition storage position = borrowPositions[msg.sender];\\n        require(position.borrowedAmount > 0, \\\"No active loan\\\");\\n\\n        Asset borrowAsset = position.borrowAsset;\\n        Asset collateralAsset = position.collateralAsset;\\n        uint256 repayAmount = position.borrowedAmount;\\n\\n        // Handle repayment\\n        if (borrowAsset == Asset.MON) {\\n            require(msg.value >= repayAmount, \\\"Insufficient repayment\\\");\\n        } else {\\n            IERC20 token = getToken(borrowAsset);\\n            require(token.transferFrom(msg.sender, address(this), repayAmount), \\\"Repay transfer failed\\\");\\n        }\\n\\n        uint256 collateralToReturn = position.collateralAmount;\\n        totalBorrowed[borrowAsset] -= repayAmount;\\n\\n        // Delete position\\n        delete borrowPositions[msg.sender];\\n\\n        // Increase credit score\\n        creditScores[msg.sender] += 2;\\n\\n        // Return collateral\\n        if (collateralAsset == Asset.MON) {\\n            payable(msg.sender).transfer(collateralToReturn);\\n            // Return excess MON if overpaid\\n            if (borrowAsset == Asset.MON && msg.value > repayAmount) {\\n                payable(msg.sender).transfer(msg.value - repayAmount);\\n            }\\n        } else {\\n            IERC20 token = getToken(collateralAsset);\\n            require(token.transfer(msg.sender, collateralToReturn), \\\"Collateral return failed\\\");\\n        }\\n\\n        emit LoanRepaid(msg.sender, repayAmount, creditScores[msg.sender]);\\n    }\\n\\n    // VIEW FUNCTIONS\\n\\n    function getSupplyPosition(address user, Asset asset) public view returns (uint256 amount, uint256 earned, uint256 timestamp) {\\n        SupplyPosition memory position = supplyPositions[user][asset];\\n        return (position.amount, calculateEarned(user, asset), position.timestamp);\\n    }\\n\\n    function getBorrowPosition(address user) public view returns (Asset borrowAsset, Asset collateralAsset, uint256 collateral, uint256 borrowed, uint256 timestamp) {\\n        BorrowPosition memory position = borrowPositions[user];\\n        return (position.borrowAsset, position.collateralAsset, position.collateralAmount, position.borrowedAmount, position.timestamp);\\n    }\\n\\n    function getAvailableLiquidity(Asset asset) public view returns (uint256) {\\n        if (asset == Asset.MON) {\\n            return address(this).balance;\\n        } else {\\n            IERC20 token = getToken(asset);\\n            return token.balanceOf(address(this));\\n        }\\n    }\\n\\n    // ADMIN FUNCTIONS\\n\\n    function setSupplyEarnBps(uint256 newRate) public onlyOwner {\\n        supplyEarnBps = newRate;\\n    }\\n\\n    function setBorrowCollateralBps(uint256 newRate) public onlyOwner {\\n        borrowCollateralBps = newRate;\\n    }\\n\\n    function setBorrowFeeBps(uint256 newRate) public onlyOwner {\\n        borrowFeeBps = newRate;\\n    }\\n\\n    function setAssetPrice(Asset asset, uint256 priceInUSD) public onlyOwner {\\n        assetPrices[asset] = priceInUSD;\\n    }\\n\\n    receive() external payable {}\\n}\",\"keccak256\":\"0x850cd0160530c3186526e0d622ec06e0195bd5c3854ba924567a1e994eb9f172\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x6080604052610320600355612ee06004556103e86005553480156200002357600080fd5b506040516200238c3803806200238c83398101604081905262000046916200019f565b33806200006d57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b620000788162000132565b50600180546001600160a01b039384166001600160a01b031991821617909155600280549290931691161781556006602052670de0b6b3a76400007f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f8819055690cb49b44ba602d8000007f3e5fec24aa4dc4e5aee2e025e51e1392c72a2500577559fae9665c6d52bd6a31556000919091527f8819ef417987f8ae7a81f42cdfb18815282fe989326fbff903d13cf0e03ace2955620001d7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146200019a57600080fd5b919050565b60008060408385031215620001b357600080fd5b620001be8362000182565b9150620001ce6020840162000182565b90509250929050565b6121a580620001e76000396000f3fe6080604052600436106101bb5760003560e01c80636362282a116100ec578063b76b0aa71161008a578063df92141111610064578063df92141114610536578063eb8b9f4814610563578063f2fde38b14610576578063f35be89a1461059657600080fd5b8063b76b0aa7146104e0578063bb236886146104f6578063d4d4f4ab1461051657600080fd5b80637aca60d0116100c65780637aca60d01461041757806380bb7273146104375780638da5cb5b146104645780639bbbcac21461048257600080fd5b80636362282a146103b5578063715018a6146103e25780637a18efd8146103f757600080fd5b80634116ec8c1161015957806345cc47601161013357806345cc47601461034c5780634a69310f1461036c578063615490f51461037f57806362dae9aa1461039f57600080fd5b80634116ec8c146102bf57806343bb34bd146102df5780634433f5581461031157600080fd5b806327614df81161019557806327614df81461024857806339bad58a146102685780633f48991414610295578063402d8883146102b757600080fd5b8063037d49b4146101c7578063090da35b146101fa57806311eac8551461021057600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e2366004611e15565b6105ea565b6040519081526020015b60405180910390f35b34801561020657600080fd5b506101e760035481565b34801561021c57600080fd5b50600254610230906001600160a01b031681565b6040516001600160a01b0390911681526020016101f1565b34801561025457600080fd5b50600154610230906001600160a01b031681565b34801561027457600080fd5b506101e7610283366004611e48565b600a6020526000908152604090205481565b3480156102a157600080fd5b506102b56102b0366004611e63565b6106bc565b005b6102b5610ae2565b3480156102cb57600080fd5b506102b56102da366004611e8d565b610edd565b3480156102eb57600080fd5b506102ff6102fa366004611e48565b610eea565b60405160ff90911681526020016101f1565b34801561031d57600080fd5b5061033161032c366004611e15565b610f56565b604080519384526020840192909252908201526060016101f1565b34801561035857600080fd5b506101e7610367366004611ea6565b610fe9565b6102b561037a366004611ee2565b611118565b34801561038b57600080fd5b506102b561039a366004611e8d565b6117dd565b3480156103ab57600080fd5b506101e760045481565b3480156103c157600080fd5b506101e76103d0366004611e48565b60066020526000908152604090205481565b3480156103ee57600080fd5b506102b56117ea565b34801561040357600080fd5b506102b5610412366004611e8d565b6117fe565b34801561042357600080fd5b506102b5610432366004611e63565b61180b565b34801561044357600080fd5b506101e7610452366004611f26565b60096020526000908152604090205481565b34801561047057600080fd5b506000546001600160a01b0316610230565b34801561048e57600080fd5b506104cf61049d366004611f26565b600860205260009081526040902080546001820154600283015460039093015460ff8084169461010090940416929085565b6040516101f1959493929190611f79565b3480156104ec57600080fd5b506101e760055481565b34801561050257600080fd5b506104cf610511366004611f26565b611850565b34801561052257600080fd5b506101e7610531366004611e48565b61192c565b34801561054257600080fd5b506101e7610551366004611e48565b600b6020526000908152604090205481565b6102b5610571366004611e63565b6119cf565b34801561058257600080fd5b506102b5610591366004611f26565b611ca6565b3480156105a257600080fd5b506105d56105b1366004611e15565b60076020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016101f1565b6001600160a01b038216600090815260076020526040812081908184600281111561061757610617611f41565b600281111561062857610628611f41565b8152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050806000015160000361066d5760009150506106b6565b600081602001514261067f9190611fc6565b9050600064496cebb80082600354856000015161069c9190611fd9565b6106a69190611fd9565b6106b09190611ff0565b93505050505b92915050565b336000908152600760205260408120818460028111156106de576106de611f41565b60028111156106ef576106ef611f41565b81526020019081526020016000209050600081600001541161074d5760405162461bcd60e51b815260206004820152601260248201527127379039bab838363c903837b9b4ba34b7b760711b60448201526064015b60405180910390fd5b600061075933856105ea565b9050600081836000015461076d9190612012565b9050808411156107b65760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610744565b80840361080e57336000908152600760205260408120908660028111156107df576107df611f41565b60028111156107f0576107f0611f41565b81526020810191909152604001600090812081815560010155610821565b6108188482611fc6565b83554260018401555b825460009085116108325784610835565b83545b905080600a600088600281111561084e5761084e611f41565b600281111561085f5761085f611f41565b8152602001908152602001600020600082825461087c9190611fc6565b909155506000905086600281111561089657610896611f41565b0361091e57844710156108eb5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e63650000006044820152606401610744565b604051339086156108fc029087906000818181858888f19350505050158015610918573d6000803e3d6000fd5b50610a95565b600061092987611ce4565b6040516370a0823160e01b815230600482015290915086906001600160a01b038316906370a0823190602401602060405180830381865afa158015610972573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109969190612025565b10156109e45760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e63650000006044820152606401610744565b60405163a9059cbb60e01b8152336004820152602481018790526001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015610a31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a55919061203e565b610a935760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610744565b505b336001600160a01b03167f4a026efdec405b9774a68ceacdbe184209840e63b70f057018d6e14a2264f9bb878786604051610ad293929190612060565b60405180910390a2505050505050565b3360009081526008602052604090206002810154610b335760405162461bcd60e51b815260206004820152600e60248201526d27379030b1ba34bb32903637b0b760911b6044820152606401610744565b8054600282015460ff80831692610100900416906000836002811115610b5b57610b5b611f41565b03610bae5780341015610ba95760405162461bcd60e51b8152602060048201526016602482015275125b9cdd59999a58da595b9d081c995c185e5b595b9d60521b6044820152606401610744565b610c79565b6000610bb984611ce4565b6040516323b872dd60e01b8152336004820152306024820152604481018490529091506001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610c0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c33919061203e565b610c775760405162461bcd60e51b815260206004820152601560248201527414995c185e481d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610744565b505b600184015481600b6000866002811115610c9557610c95611f41565b6002811115610ca657610ca6611f41565b81526020019081526020016000206000828254610cc39190611fc6565b9091555050336000908152600860209081526040808320805461ffff19168155600181018490556002808201859055600390910184905560099092528220805491929091610d12908490612012565b9091555060009050836002811115610d2c57610d2c611f41565b03610dc157604051339082156108fc029083906000818181858888f19350505050158015610d5e573d6000803e3d6000fd5b506000846002811115610d7357610d73611f41565b148015610d7f57508134115b15610dbc57336108fc610d928434611fc6565b6040518115909202916000818181858888f19350505050158015610dba573d6000803e3d6000fd5b505b610e8e565b6000610dcc84611ce4565b60405163a9059cbb60e01b8152336004820152602481018490529091506001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015610e1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e40919061203e565b610e8c5760405162461bcd60e51b815260206004820152601860248201527f436f6c6c61746572616c2072657475726e206661696c656400000000000000006044820152606401610744565b505b33600081815260096020908152604091829020548251868152918201527fc7ce0a35f17b490de2a317e7fecb2cae86b1abffb03800b2f492823521382698910160405180910390a25050505050565b610ee5611d72565b600555565b600080826002811115610eff57610eff611f41565b03610f0c57506012919050565b6001826002811115610f2057610f20611f41565b03610f2d57506008919050565b6002826002811115610f4157610f41611f41565b03610f4e57506006919050565b506012919050565b6001600160a01b038216600090815260076020526040812081908190819081866002811115610f8757610f87611f41565b6002811115610f9857610f98611f41565b81526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090508060000151610fd687876105ea565b8260200151935093509350509250925092565b6000806006600085600281111561100257611002611f41565b600281111561101357611013611f41565b815260200190815260200160002054905060006006600085600281111561103c5761103c611f41565b600281111561104d5761104d611f41565b8152602001908152602001600020549050600061106986610eea565b60ff169050600061107986610eea565b60ff169050600061108b83600a612163565b61109d90670de0b6b3a7640000611fd9565b6110a7868b611fd9565b6110b990670de0b6b3a7640000611fd9565b6110c39190611ff0565b905060006110d985670de0b6b3a7640000611fd9565b6110e484600a612163565b6110ee9084611fd9565b61110090670de0b6b3a7640000611fd9565b61110a9190611ff0565b9a9950505050505050505050565b600083116111745760405162461bcd60e51b8152602060048201526024808201527f426f72726f7720616d6f756e74206d75737420626520677265617465722074686044820152630616e20360e41b6064820152608401610744565b33600090815260086020526040902060020154156111d45760405162461bcd60e51b815260206004820152601860248201527f416c7265616479206861766520616374697665206c6f616e00000000000000006044820152606401610744565b8160028111156111e6576111e6611f41565b8460028111156111f8576111f8611f41565b0361125c5760405162461bcd60e51b815260206004820152602e60248201527f426f72726f7720616e6420636f6c6c61746572616c206d75737420626520646960448201526d66666572656e742061737365747360901b6064820152608401610744565b6000611269848685610fe9565b90506127106004548261127c9190611fd9565b6112869190611ff0565b9050808210156112d85760405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e7420636f6c6c61746572616c0000000000000000006044820152606401610744565b60008360028111156112ec576112ec611f41565b0361133e578134146113395760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081353d38818dbdb1b185d195c985b60521b6044820152606401610744565b611411565b600061134984611ce4565b6040516323b872dd60e01b8152336004820152306024820152604481018590529091506001600160a01b038216906323b872dd906064016020604051808303816000875af115801561139f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c3919061203e565b61140f5760405162461bcd60e51b815260206004820152601a60248201527f436f6c6c61746572616c207472616e73666572206661696c65640000000000006044820152606401610744565b505b6000612710600554866114249190611fd9565b61142e9190611ff0565b9050600061143c8287611fc6565b9050600087600281111561145257611452611f41565b036114a557854710156114a05760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74206c697175696469747960501b6044820152606401610744565b611566565b60006114b088611ce4565b6040516370a0823160e01b815230600482015290915087906001600160a01b038316906370a0823190602401602060405180830381865afa1580156114f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151d9190612025565b10156115645760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74206c697175696469747960501b6044820152606401610744565b505b6040518060a0016040528088600281111561158357611583611f41565b815260200186600281111561159a5761159a611f41565b8152602080820187905260408083018a90524260609093019290925233600090815260089091522081518154829060ff191660018360028111156115e0576115e0611f41565b021790555060208201518154829061ff00191661010083600281111561160857611608611f41565b021790555060408201518160010155606082015181600201556080820151816003015590505085600b600089600281111561164557611645611f41565b600281111561165657611656611f41565b815260200190815260200160002060008282546116739190612012565b909155506000905087600281111561168d5761168d611f41565b036116c557604051339082156108fc029083906000818181858888f193505050501580156116bf573d6000803e3d6000fd5b5061178b565b60006116d088611ce4565b60405163a9059cbb60e01b8152336004820152602481018490529091506001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015611720573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611744919061203e565b6117895760405162461bcd60e51b8152602060048201526016602482015275109bdc9c9bddc81d1c985b9cd9995c8819985a5b195960521b6044820152606401610744565b505b336001600160a01b03167ffe40285e35c7699ccb544547575f1604fb4477824d0a3d6208657e64d0ae866f8887878a876040516117cc959493929190611f79565b60405180910390a250505050505050565b6117e5611d72565b600455565b6117f2611d72565b6117fc6000611d9f565b565b611806611d72565b600355565b611813611d72565b806006600084600281111561182a5761182a611f41565b600281111561183b5761183b611f41565b81526020810191909152604001600020555050565b6001600160a01b038116600090815260086020526040808220815160a081019092528054839283928392839283929091829060ff16600281111561189657611896611f41565b60028111156118a7576118a7611f41565b81528154602090910190610100900460ff1660028111156118ca576118ca611f41565b60028111156118db576118db611f41565b81526020016001820154815260200160028201548152602001600382015481525050905080600001518160200151826040015183606001518460800151955095509550955095505091939590929450565b60008082600281111561194157611941611f41565b0361194d575047919050565b600061195883611ce4565b6040516370a0823160e01b81523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa15801561199f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c39190612025565b9392505050565b919050565b60008260028111156119e3576119e3611f41565b03611a3d5780341480156119f75750600081115b611a385760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081353d388185b5bdd5b9d60721b6044820152606401610744565b611b52565b60008111611a8d5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610744565b6000611a9883611ce4565b6040516323b872dd60e01b8152336004820152306024820152604481018490529091506001600160a01b038216906323b872dd906064016020604051808303816000875af1158015611aee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b12919061203e565b611b505760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610744565b505b33600090815260076020526040812081846002811115611b7457611b74611f41565b6002811115611b8557611b85611f41565b81526020810191909152604001600020805490915015611bc8576000611bab33856105ea565b905080826000016000828254611bc19190612012565b9091555050505b81816000016000828254611bdc9190612012565b909155505042600182015581600a6000856002811115611bfe57611bfe611f41565b6002811115611c0f57611c0f611f41565b81526020019081526020016000206000828254611c2c9190612012565b9091555050336000908152600960205260408120805460019290611c51908490612012565b909155505033600081815260096020526040908190205490517f4b6e4013f1c915bab4a50202897e715406d404803a407587b904fe73477cbe0191611c999187918791612060565b60405180910390a2505050565b611cae611d72565b6001600160a01b038116611cd857604051631e4fbdf760e01b815260006004820152602401610744565b611ce181611d9f565b50565b60006001826002811115611cfa57611cfa611f41565b03611d105750506001546001600160a01b031690565b6002826002811115611d2457611d24611f41565b03611d3a5750506002546001600160a01b031690565b60405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a5908185cdcd95d609a1b6044820152606401610744565b6000546001600160a01b031633146117fc5760405163118cdaa760e01b8152336004820152602401610744565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146119ca57600080fd5b8035600381106119ca57600080fd5b60008060408385031215611e2857600080fd5b611e3183611def565b9150611e3f60208401611e06565b90509250929050565b600060208284031215611e5a57600080fd5b6119c382611e06565b60008060408385031215611e7657600080fd5b611e7f83611e06565b946020939093013593505050565b600060208284031215611e9f57600080fd5b5035919050565b600080600060608486031215611ebb57600080fd5b83359250611ecb60208501611e06565b9150611ed960408501611e06565b90509250925092565b60008060008060808587031215611ef857600080fd5b611f0185611e06565b935060208501359250611f1660408601611e06565b9396929550929360600135925050565b600060208284031215611f3857600080fd5b6119c382611def565b634e487b7160e01b600052602160045260246000fd5b60038110611f7557634e487b7160e01b600052602160045260246000fd5b9052565b60a08101611f878288611f57565b611f946020830187611f57565b8460408301528360608301528260808301529695505050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156106b6576106b6611fb0565b80820281158282048414176106b6576106b6611fb0565b60008261200d57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156106b6576106b6611fb0565b60006020828403121561203757600080fd5b5051919050565b60006020828403121561205057600080fd5b815180151581146119c357600080fd5b6060810161206e8286611f57565b602082019390935260400152919050565b600181815b808511156120ba5781600019048211156120a0576120a0611fb0565b808516156120ad57918102915b93841c9390800290612084565b509250929050565b6000826120d1575060016106b6565b816120de575060006106b6565b81600181146120f457600281146120fe5761211a565b60019150506106b6565b60ff84111561210f5761210f611fb0565b50506001821b6106b6565b5060208310610133831016604e8410600b841016171561213d575081810a6106b6565b612147838361207f565b806000190482111561215b5761215b611fb0565b029392505050565b60006119c383836120c256fea26469706673582212208ad2bed931bdeaf1f048caea853a665f350b9ed2ba33c81f4112f3c5c9ac661664736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106101bb5760003560e01c80636362282a116100ec578063b76b0aa71161008a578063df92141111610064578063df92141114610536578063eb8b9f4814610563578063f2fde38b14610576578063f35be89a1461059657600080fd5b8063b76b0aa7146104e0578063bb236886146104f6578063d4d4f4ab1461051657600080fd5b80637aca60d0116100c65780637aca60d01461041757806380bb7273146104375780638da5cb5b146104645780639bbbcac21461048257600080fd5b80636362282a146103b5578063715018a6146103e25780637a18efd8146103f757600080fd5b80634116ec8c1161015957806345cc47601161013357806345cc47601461034c5780634a69310f1461036c578063615490f51461037f57806362dae9aa1461039f57600080fd5b80634116ec8c146102bf57806343bb34bd146102df5780634433f5581461031157600080fd5b806327614df81161019557806327614df81461024857806339bad58a146102685780633f48991414610295578063402d8883146102b757600080fd5b8063037d49b4146101c7578063090da35b146101fa57806311eac8551461021057600080fd5b366101c257005b600080fd5b3480156101d357600080fd5b506101e76101e2366004611e15565b6105ea565b6040519081526020015b60405180910390f35b34801561020657600080fd5b506101e760035481565b34801561021c57600080fd5b50600254610230906001600160a01b031681565b6040516001600160a01b0390911681526020016101f1565b34801561025457600080fd5b50600154610230906001600160a01b031681565b34801561027457600080fd5b506101e7610283366004611e48565b600a6020526000908152604090205481565b3480156102a157600080fd5b506102b56102b0366004611e63565b6106bc565b005b6102b5610ae2565b3480156102cb57600080fd5b506102b56102da366004611e8d565b610edd565b3480156102eb57600080fd5b506102ff6102fa366004611e48565b610eea565b60405160ff90911681526020016101f1565b34801561031d57600080fd5b5061033161032c366004611e15565b610f56565b604080519384526020840192909252908201526060016101f1565b34801561035857600080fd5b506101e7610367366004611ea6565b610fe9565b6102b561037a366004611ee2565b611118565b34801561038b57600080fd5b506102b561039a366004611e8d565b6117dd565b3480156103ab57600080fd5b506101e760045481565b3480156103c157600080fd5b506101e76103d0366004611e48565b60066020526000908152604090205481565b3480156103ee57600080fd5b506102b56117ea565b34801561040357600080fd5b506102b5610412366004611e8d565b6117fe565b34801561042357600080fd5b506102b5610432366004611e63565b61180b565b34801561044357600080fd5b506101e7610452366004611f26565b60096020526000908152604090205481565b34801561047057600080fd5b506000546001600160a01b0316610230565b34801561048e57600080fd5b506104cf61049d366004611f26565b600860205260009081526040902080546001820154600283015460039093015460ff8084169461010090940416929085565b6040516101f1959493929190611f79565b3480156104ec57600080fd5b506101e760055481565b34801561050257600080fd5b506104cf610511366004611f26565b611850565b34801561052257600080fd5b506101e7610531366004611e48565b61192c565b34801561054257600080fd5b506101e7610551366004611e48565b600b6020526000908152604090205481565b6102b5610571366004611e63565b6119cf565b34801561058257600080fd5b506102b5610591366004611f26565b611ca6565b3480156105a257600080fd5b506105d56105b1366004611e15565b60076020908152600092835260408084209091529082529020805460019091015482565b604080519283526020830191909152016101f1565b6001600160a01b038216600090815260076020526040812081908184600281111561061757610617611f41565b600281111561062857610628611f41565b8152602001908152602001600020604051806040016040529081600082015481526020016001820154815250509050806000015160000361066d5760009150506106b6565b600081602001514261067f9190611fc6565b9050600064496cebb80082600354856000015161069c9190611fd9565b6106a69190611fd9565b6106b09190611ff0565b93505050505b92915050565b336000908152600760205260408120818460028111156106de576106de611f41565b60028111156106ef576106ef611f41565b81526020019081526020016000209050600081600001541161074d5760405162461bcd60e51b815260206004820152601260248201527127379039bab838363c903837b9b4ba34b7b760711b60448201526064015b60405180910390fd5b600061075933856105ea565b9050600081836000015461076d9190612012565b9050808411156107b65760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610744565b80840361080e57336000908152600760205260408120908660028111156107df576107df611f41565b60028111156107f0576107f0611f41565b81526020810191909152604001600090812081815560010155610821565b6108188482611fc6565b83554260018401555b825460009085116108325784610835565b83545b905080600a600088600281111561084e5761084e611f41565b600281111561085f5761085f611f41565b8152602001908152602001600020600082825461087c9190611fc6565b909155506000905086600281111561089657610896611f41565b0361091e57844710156108eb5760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e63650000006044820152606401610744565b604051339086156108fc029087906000818181858888f19350505050158015610918573d6000803e3d6000fd5b50610a95565b600061092987611ce4565b6040516370a0823160e01b815230600482015290915086906001600160a01b038316906370a0823190602401602060405180830381865afa158015610972573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109969190612025565b10156109e45760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e63650000006044820152606401610744565b60405163a9059cbb60e01b8152336004820152602481018790526001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015610a31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a55919061203e565b610a935760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610744565b505b336001600160a01b03167f4a026efdec405b9774a68ceacdbe184209840e63b70f057018d6e14a2264f9bb878786604051610ad293929190612060565b60405180910390a2505050505050565b3360009081526008602052604090206002810154610b335760405162461bcd60e51b815260206004820152600e60248201526d27379030b1ba34bb32903637b0b760911b6044820152606401610744565b8054600282015460ff80831692610100900416906000836002811115610b5b57610b5b611f41565b03610bae5780341015610ba95760405162461bcd60e51b8152602060048201526016602482015275125b9cdd59999a58da595b9d081c995c185e5b595b9d60521b6044820152606401610744565b610c79565b6000610bb984611ce4565b6040516323b872dd60e01b8152336004820152306024820152604481018490529091506001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610c0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c33919061203e565b610c775760405162461bcd60e51b815260206004820152601560248201527414995c185e481d1c985b9cd9995c8819985a5b1959605a1b6044820152606401610744565b505b600184015481600b6000866002811115610c9557610c95611f41565b6002811115610ca657610ca6611f41565b81526020019081526020016000206000828254610cc39190611fc6565b9091555050336000908152600860209081526040808320805461ffff19168155600181018490556002808201859055600390910184905560099092528220805491929091610d12908490612012565b9091555060009050836002811115610d2c57610d2c611f41565b03610dc157604051339082156108fc029083906000818181858888f19350505050158015610d5e573d6000803e3d6000fd5b506000846002811115610d7357610d73611f41565b148015610d7f57508134115b15610dbc57336108fc610d928434611fc6565b6040518115909202916000818181858888f19350505050158015610dba573d6000803e3d6000fd5b505b610e8e565b6000610dcc84611ce4565b60405163a9059cbb60e01b8152336004820152602481018490529091506001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015610e1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e40919061203e565b610e8c5760405162461bcd60e51b815260206004820152601860248201527f436f6c6c61746572616c2072657475726e206661696c656400000000000000006044820152606401610744565b505b33600081815260096020908152604091829020548251868152918201527fc7ce0a35f17b490de2a317e7fecb2cae86b1abffb03800b2f492823521382698910160405180910390a25050505050565b610ee5611d72565b600555565b600080826002811115610eff57610eff611f41565b03610f0c57506012919050565b6001826002811115610f2057610f20611f41565b03610f2d57506008919050565b6002826002811115610f4157610f41611f41565b03610f4e57506006919050565b506012919050565b6001600160a01b038216600090815260076020526040812081908190819081866002811115610f8757610f87611f41565b6002811115610f9857610f98611f41565b81526020019081526020016000206040518060400160405290816000820154815260200160018201548152505090508060000151610fd687876105ea565b8260200151935093509350509250925092565b6000806006600085600281111561100257611002611f41565b600281111561101357611013611f41565b815260200190815260200160002054905060006006600085600281111561103c5761103c611f41565b600281111561104d5761104d611f41565b8152602001908152602001600020549050600061106986610eea565b60ff169050600061107986610eea565b60ff169050600061108b83600a612163565b61109d90670de0b6b3a7640000611fd9565b6110a7868b611fd9565b6110b990670de0b6b3a7640000611fd9565b6110c39190611ff0565b905060006110d985670de0b6b3a7640000611fd9565b6110e484600a612163565b6110ee9084611fd9565b61110090670de0b6b3a7640000611fd9565b61110a9190611ff0565b9a9950505050505050505050565b600083116111745760405162461bcd60e51b8152602060048201526024808201527f426f72726f7720616d6f756e74206d75737420626520677265617465722074686044820152630616e20360e41b6064820152608401610744565b33600090815260086020526040902060020154156111d45760405162461bcd60e51b815260206004820152601860248201527f416c7265616479206861766520616374697665206c6f616e00000000000000006044820152606401610744565b8160028111156111e6576111e6611f41565b8460028111156111f8576111f8611f41565b0361125c5760405162461bcd60e51b815260206004820152602e60248201527f426f72726f7720616e6420636f6c6c61746572616c206d75737420626520646960448201526d66666572656e742061737365747360901b6064820152608401610744565b6000611269848685610fe9565b90506127106004548261127c9190611fd9565b6112869190611ff0565b9050808210156112d85760405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e7420636f6c6c61746572616c0000000000000000006044820152606401610744565b60008360028111156112ec576112ec611f41565b0361133e578134146113395760405162461bcd60e51b8152602060048201526016602482015275125b9d985b1a59081353d38818dbdb1b185d195c985b60521b6044820152606401610744565b611411565b600061134984611ce4565b6040516323b872dd60e01b8152336004820152306024820152604481018590529091506001600160a01b038216906323b872dd906064016020604051808303816000875af115801561139f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c3919061203e565b61140f5760405162461bcd60e51b815260206004820152601a60248201527f436f6c6c61746572616c207472616e73666572206661696c65640000000000006044820152606401610744565b505b6000612710600554866114249190611fd9565b61142e9190611ff0565b9050600061143c8287611fc6565b9050600087600281111561145257611452611f41565b036114a557854710156114a05760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74206c697175696469747960501b6044820152606401610744565b611566565b60006114b088611ce4565b6040516370a0823160e01b815230600482015290915087906001600160a01b038316906370a0823190602401602060405180830381865afa1580156114f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151d9190612025565b10156115645760405162461bcd60e51b8152602060048201526016602482015275496e73756666696369656e74206c697175696469747960501b6044820152606401610744565b505b6040518060a0016040528088600281111561158357611583611f41565b815260200186600281111561159a5761159a611f41565b8152602080820187905260408083018a90524260609093019290925233600090815260089091522081518154829060ff191660018360028111156115e0576115e0611f41565b021790555060208201518154829061ff00191661010083600281111561160857611608611f41565b021790555060408201518160010155606082015181600201556080820151816003015590505085600b600089600281111561164557611645611f41565b600281111561165657611656611f41565b815260200190815260200160002060008282546116739190612012565b909155506000905087600281111561168d5761168d611f41565b036116c557604051339082156108fc029083906000818181858888f193505050501580156116bf573d6000803e3d6000fd5b5061178b565b60006116d088611ce4565b60405163a9059cbb60e01b8152336004820152602481018490529091506001600160a01b0382169063a9059cbb906044016020604051808303816000875af1158015611720573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611744919061203e565b6117895760405162461bcd60e51b8152602060048201526016602482015275109bdc9c9bddc81d1c985b9cd9995c8819985a5b195960521b6044820152606401610744565b505b336001600160a01b03167ffe40285e35c7699ccb544547575f1604fb4477824d0a3d6208657e64d0ae866f8887878a876040516117cc959493929190611f79565b60405180910390a250505050505050565b6117e5611d72565b600455565b6117f2611d72565b6117fc6000611d9f565b565b611806611d72565b600355565b611813611d72565b806006600084600281111561182a5761182a611f41565b600281111561183b5761183b611f41565b81526020810191909152604001600020555050565b6001600160a01b038116600090815260086020526040808220815160a081019092528054839283928392839283929091829060ff16600281111561189657611896611f41565b60028111156118a7576118a7611f41565b81528154602090910190610100900460ff1660028111156118ca576118ca611f41565b60028111156118db576118db611f41565b81526020016001820154815260200160028201548152602001600382015481525050905080600001518160200151826040015183606001518460800151955095509550955095505091939590929450565b60008082600281111561194157611941611f41565b0361194d575047919050565b600061195883611ce4565b6040516370a0823160e01b81523060048201529091506001600160a01b038216906370a0823190602401602060405180830381865afa15801561199f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119c39190612025565b9392505050565b919050565b60008260028111156119e3576119e3611f41565b03611a3d5780341480156119f75750600081115b611a385760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a59081353d388185b5bdd5b9d60721b6044820152606401610744565b611b52565b60008111611a8d5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610744565b6000611a9883611ce4565b6040516323b872dd60e01b8152336004820152306024820152604481018490529091506001600160a01b038216906323b872dd906064016020604051808303816000875af1158015611aee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b12919061203e565b611b505760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b6044820152606401610744565b505b33600090815260076020526040812081846002811115611b7457611b74611f41565b6002811115611b8557611b85611f41565b81526020810191909152604001600020805490915015611bc8576000611bab33856105ea565b905080826000016000828254611bc19190612012565b9091555050505b81816000016000828254611bdc9190612012565b909155505042600182015581600a6000856002811115611bfe57611bfe611f41565b6002811115611c0f57611c0f611f41565b81526020019081526020016000206000828254611c2c9190612012565b9091555050336000908152600960205260408120805460019290611c51908490612012565b909155505033600081815260096020526040908190205490517f4b6e4013f1c915bab4a50202897e715406d404803a407587b904fe73477cbe0191611c999187918791612060565b60405180910390a2505050565b611cae611d72565b6001600160a01b038116611cd857604051631e4fbdf760e01b815260006004820152602401610744565b611ce181611d9f565b50565b60006001826002811115611cfa57611cfa611f41565b03611d105750506001546001600160a01b031690565b6002826002811115611d2457611d24611f41565b03611d3a5750506002546001600160a01b031690565b60405162461bcd60e51b815260206004820152600d60248201526c125b9d985b1a5908185cdcd95d609a1b6044820152606401610744565b6000546001600160a01b031633146117fc5760405163118cdaa760e01b8152336004820152602401610744565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b03811681146119ca57600080fd5b8035600381106119ca57600080fd5b60008060408385031215611e2857600080fd5b611e3183611def565b9150611e3f60208401611e06565b90509250929050565b600060208284031215611e5a57600080fd5b6119c382611e06565b60008060408385031215611e7657600080fd5b611e7f83611e06565b946020939093013593505050565b600060208284031215611e9f57600080fd5b5035919050565b600080600060608486031215611ebb57600080fd5b83359250611ecb60208501611e06565b9150611ed960408501611e06565b90509250925092565b60008060008060808587031215611ef857600080fd5b611f0185611e06565b935060208501359250611f1660408601611e06565b9396929550929360600135925050565b600060208284031215611f3857600080fd5b6119c382611def565b634e487b7160e01b600052602160045260246000fd5b60038110611f7557634e487b7160e01b600052602160045260246000fd5b9052565b60a08101611f878288611f57565b611f946020830187611f57565b8460408301528360608301528260808301529695505050505050565b634e487b7160e01b600052601160045260246000fd5b818103818111156106b6576106b6611fb0565b80820281158282048414176106b6576106b6611fb0565b60008261200d57634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156106b6576106b6611fb0565b60006020828403121561203757600080fd5b5051919050565b60006020828403121561205057600080fd5b815180151581146119c357600080fd5b6060810161206e8286611f57565b602082019390935260400152919050565b600181815b808511156120ba5781600019048211156120a0576120a0611fb0565b808516156120ad57918102915b93841c9390800290612084565b509250929050565b6000826120d1575060016106b6565b816120de575060006106b6565b81600181146120f457600281146120fe5761211a565b60019150506106b6565b60ff84111561210f5761210f611fb0565b50506001821b6106b6565b5060208310610133831016604e8410600b841016171561213d575081810a6106b6565b612147838361207f565b806000190482111561215b5761215b611fb0565b029392505050565b60006119c383836120c256fea26469706673582212208ad2bed931bdeaf1f048caea853a665f350b9ed2ba33c81f4112f3c5c9ac661664736f6c63430008140033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/IplikciFinance.sol:IplikciFinance",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 268,
        "contract": "contracts/IplikciFinance.sol:IplikciFinance",
        "label": "wbtcToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)225"
      },
      {
        "astId": 271,
        "contract": "contracts/IplikciFinance.sol:IplikciFinance",
        "label": "usdcToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)225"
      },
      {
        "astId": 274,
        "contract": "contracts/IplikciFinance.sol:IplikciFinance",
        "label": "supplyEarnBps",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 277,
        "contract": "contracts/IplikciFinance.sol:IplikciFinance",
        "label": "borrowCollateralBps",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 280,
        "contract": "contracts/IplikciFinance.sol:IplikciFinance",
        "label": "borrowFeeBps",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 285,
        "contract": "contracts/IplikciFinance.sol:IplikciFinance",
        "label": "assetPrices",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_enum(Asset)265,t_uint256)"
      },
      {
        "astId": 311,
        "contract": "contracts/IplikciFinance.sol:IplikciFinance",
        "label": "supplyPositions",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_mapping(t_enum(Asset)265,t_struct(SupplyPosition)290_storage))"
      },
      {
        "astId": 316,
        "contract": "contracts/IplikciFinance.sol:IplikciFinance",
        "label": "borrowPositions",
        "offset": 0,
        "slot": "8",
        "type": "t_mapping(t_address,t_struct(BorrowPosition)303_storage)"
      },
      {
        "astId": 320,
        "contract": "contracts/IplikciFinance.sol:IplikciFinance",
        "label": "creditScores",
        "offset": 0,
        "slot": "9",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 325,
        "contract": "contracts/IplikciFinance.sol:IplikciFinance",
        "label": "totalSupplied",
        "offset": 0,
        "slot": "10",
        "type": "t_mapping(t_enum(Asset)265,t_uint256)"
      },
      {
        "astId": 330,
        "contract": "contracts/IplikciFinance.sol:IplikciFinance",
        "label": "totalBorrowed",
        "offset": 0,
        "slot": "11",
        "type": "t_mapping(t_enum(Asset)265,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)225": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_enum(Asset)265": {
        "encoding": "inplace",
        "label": "enum IplikciFinance.Asset",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_enum(Asset)265,t_struct(SupplyPosition)290_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(enum IplikciFinance.Asset => struct IplikciFinance.SupplyPosition))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_enum(Asset)265,t_struct(SupplyPosition)290_storage)"
      },
      "t_mapping(t_address,t_struct(BorrowPosition)303_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IplikciFinance.BorrowPosition)",
        "numberOfBytes": "32",
        "value": "t_struct(BorrowPosition)303_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_enum(Asset)265,t_struct(SupplyPosition)290_storage)": {
        "encoding": "mapping",
        "key": "t_enum(Asset)265",
        "label": "mapping(enum IplikciFinance.Asset => struct IplikciFinance.SupplyPosition)",
        "numberOfBytes": "32",
        "value": "t_struct(SupplyPosition)290_storage"
      },
      "t_mapping(t_enum(Asset)265,t_uint256)": {
        "encoding": "mapping",
        "key": "t_enum(Asset)265",
        "label": "mapping(enum IplikciFinance.Asset => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(BorrowPosition)303_storage": {
        "encoding": "inplace",
        "label": "struct IplikciFinance.BorrowPosition",
        "members": [
          {
            "astId": 293,
            "contract": "contracts/IplikciFinance.sol:IplikciFinance",
            "label": "borrowAsset",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(Asset)265"
          },
          {
            "astId": 296,
            "contract": "contracts/IplikciFinance.sol:IplikciFinance",
            "label": "collateralAsset",
            "offset": 1,
            "slot": "0",
            "type": "t_enum(Asset)265"
          },
          {
            "astId": 298,
            "contract": "contracts/IplikciFinance.sol:IplikciFinance",
            "label": "collateralAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 300,
            "contract": "contracts/IplikciFinance.sol:IplikciFinance",
            "label": "borrowedAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 302,
            "contract": "contracts/IplikciFinance.sol:IplikciFinance",
            "label": "timestamp",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(SupplyPosition)290_storage": {
        "encoding": "inplace",
        "label": "struct IplikciFinance.SupplyPosition",
        "members": [
          {
            "astId": 287,
            "contract": "contracts/IplikciFinance.sol:IplikciFinance",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 289,
            "contract": "contracts/IplikciFinance.sol:IplikciFinance",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}